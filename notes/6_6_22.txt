Did a run to count outputs for CGP with AND,OR,NAND,NOR with 10^10 samples using src/test_count_outputs.jl.
This ran on surt2 with 28 processes in 3.5 hours in contrast to the RecordOutputs run of
../data/5_27_22/run_4x1_CGP_countsB.jl which took days and then crashed.  So I should replace
RecordOutputs functions with test_count_outputs functions

Plot of log redundancy vs rank for CGP 11 gates 8 lb and LGP 10 insts 2 regs with gates AND, OR, NAND, NOR.
using Plots
gr()
lg10(x::Number) = (x == 0.0) ? 0.0 : log10(x)
cdf10 =  read_dataframe("../data/5_13_22/count_outputs_lc_4funcs_4inputs_10insts_2regs_B.csv")
cdf11 = read_dataframe("../data/6_6_22/count_outputs_4x1_CGP_11_8G.csv")
cdf10.ints10_2lgsrt = sort(map(lg10,cdf10.ints10_2),rev=true)
cdf11.ints11_8lgsrt = sort(map(lg10,cdf11.counts),rev=true)
plot(1:65536,[ cdf11.ints11_8lgsrt, cdf10.ints10_2lgsrt ],labels=["CGP 11 gates 8 levelsback" "LGP 10 gates 2 registers"])
 plot!(xlabel="rank",ylabel="log redundancy")
savefig("../data/6_6_22/log_redund_vs_rank_CGP_LGP_4gate_types.png")

Plot of log redundancy vs rank for CGP 11 gates 8 lb and LGP 10 insts 2 regs with gates AND, OR, NAND, NOR, XOR.
Minor revision of 5_31_22.txt
lcdf = read_dataframe("../data/5_24_22/count_outputs_lc_5funcs_4inputs_10insts_2regs_B.csv")
log10(sum(lcdf.ints10_2)) # 11.317420411834778
ccdf = read_dataframe("../data/counts/count_out_4x1_all_ints_10_10.csv")
log10(sum(lcdf.ints10_2))  # log10(sum(lcdf.ints10_2))
ccdf.ints11_8sort = sort(ccdf.ints11_8,rev=true)
lcdf.ints10_2sort = sort(lcdf.ints10_2,rev=true)
ccdf.ints11_8log = map(x->lg10(x), ccdf.ints11_8sort)
lcdf.ints10_2log = map(x->lg10(x), lcdf.ints10_2sort)
plot(collect(1:65536),[ccdf.ints11_8log,lcdf.ints10_2log],labels=["CGP 11 gates 8 levelsback" "LGP 10 instructions 2 registers"])
plot!(ylabel="log redundancy", xlabel="rank" )
savefig("../data/6_6_22/log_redund_vs_rank_5gates_CGP11_8_LGP10_2.png")

