Added numgates and levelsback as output dataframe fields for explore_complexity() in Complexity.jl.
Verified on 5/19/22.  Note:  revisions in notes/6_17_21.txt.

expdf =read_dataframe("1_4/explore_complexity1_4all60.csv")
plot(expdf.generation[1:60],[expdf[expdf.numgates.==x,:cumm_unique_goals] for x in 12.0:-1.0:8.0],xlabel="Generation",ylabel="cummulative number of unique phenotypes",legend=:bottomright,labels=["12 gates 9 levelsback" "11 gates 8 levelsback" "10 gates 7 levelsback" "9 gates 6 levelsback" "8 gates 5 levelsback"])
plot!(size=(1024,512),framestyle=:box,tickfontsize=16,guidefontsize=16,legendfontsize=14)
plot!(bottom_margin=Measures.Length(:mm,5),left_margin=Measures.Length(:mm,3))
savefig("1_4/cumm_unique_goals_12_11_10_9_8gates.png")

mmdf11=expdf[expdf.numgates.==11,[:generation,:mean_complexity,:max_complexity]]
mmdf12=expdf[expdf.numgates.==12,[:generation,:mean_complexity,:max_complexity]]
plot(mmdf12.generation,[mmdf12.max_complexity,mmdf12.mean_complexity],legend=:bottomright,labels=["Maximum complexity" "Mean complexity"]))
plot!(size=(1024,512),framestyle=:box,tickfontsize=16,guidefontsize=16,legendfontsize=14)
plot!(bottom_margin=Measures.Length(:mm,5),left_margin=Measures.Length(:mm,3))
plot!(xlabel="generation",ylabel="Tononi complexity")

Extending find_neutral_components() to LinCircuits.
Data are in data/1_3_22/.  Revised run*.jl files to give CSV files and JLD files more meaningful names.
Revised Fnc.jl to always use funcs when calling output_values().

The parameter settings p=Parameters(3,1,4,1) with both 4 funcs and 5 funcs give interesting results.
Example on surt2:
data/1_3_22/neutral_components_lc_0x0b_5funcs_3_4_1_E.csv ran in 175 seconds
Many NC lengths ranging from 4 to 4208.
However, trends toward increasing robustness decreasing complexity with NC length are weak (especially the latter).

Another surt2 example:
neutral_components_lc_0xf5_5funcs_3_4_1_F.csv   5485 seconds
NC sizes:s 1,3,6,8,,10,464,736,9024,10048,115600,139776
Again, robustness and complexity trends are weak at best.
