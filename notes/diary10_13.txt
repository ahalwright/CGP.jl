Working on paper:

My overview says:
•	Complexity, evolvability, and robustness
•	Digital circuits as a platform for understanding evolution
•	Neutral evolution and genotype-phenotype map
but my current intro starts with GP map.

But GP papers are where I have the most relevant references
and those whose results differ from mine.  Change to GP map first.
Weakness is lack of ties to evolution of technology.  Maybe look
at Arthur's book.


Evolvability results for random_neutral_walk don't seem to agree with those from geno_complexity().
Edited geno_complexity to return only ev_count.
All of these geno_complexity() results with max_tries = 300 are garbage because the number of iterations is limited by max_tries.
So this is why the evolvability count seems to level out above maxreps = 300.

New runs with max_tries set correctly:
[0x5c06]
julia> @time  gcev=geno_complexity( g, 800, p, 200000, 300 )
ntries: 813  nrepeats: 800
2362 seconds 
4552
@time gcev=geno_complexity( g, 1600, p, 200000, 2000 )
ntries: 1611  nrepeats: 1600
4724.084853 seconds (8.55 G allocations: 498.415 GiB, 1.56% gc time)
6018
julia> @time  gcev=geno_complexity( g, 3600, p, 200000, 4800 )
ntries: 3656  nrepeats: 3600
11352
7933


julia> p
Parameters(1, 4, 0.05, 0.0, 4, 1, 2, 11, 5)
julia> g
[0x8c43]
julia> gcev=geno_complexity( g, 400, p, 200000, 300 )
2276
julia> @time @time gcev=geno_complexity( g, 4000, p, 200000, 8000 ) 
geno_complexity: goal: UInt16[0x8c43]
ntries: 4011  nrepeats: 4000
8302.943958 seconds 
7112



julia> rrev=run_random_neutral_walk( p, g, 400, 200000, 50 )
298.88
julia> rrev=run_random_neutral_walk( p, g, 400, 200000, 50 )
298.34
julia> rrev=run_random_neutral_walk( p, g, 2000, 200000, 50, skip_steps=5 )  # Record unique goals every 5 steps
510.32
julia> @time rrev=run_random_neutral_walk( p, g, 4000, 200000, 50, skip_steps=10 )
566.04
julia> @time rrev=run_random_neutral_walk( p, g, 8000, 200000, 50, skip_steps=20 )
597 seconds
627.12

julia> g = randgoal(p.numinputs,p.numoutputs)
1-element Array{UInt16,1}:
 0x0952

two more rare goals:   [0x6b18] and [0xbd49]
2×3 DataFrame
│ Row │ goals  │ ints11_5 │ ints11_8 │
│     │ String │ Int64    │ Int64    │
├─────┼────────┼──────────┼──────────┤
│ 1   │ 0x6b18 │ 0        │ 3        │
│ 2   │ 0xbd49 │ 0        │ 4        │

For g = [0xbd49]
julia> @time gcev=geno_complexity( g, 800, p, 200000, 300 )
ntries: 300  nrepeats: 207
5699 seconds 
3769

For g = [0x6b18]
julia> @time gcev=geno_complexity( g, 800, p, 200000, 300 )
ntries: 300  nrepeats: 195
5961 seconds
4078
