Debugging function interleave_chromosome( c1::Chromosome, c2::Chromosome )  in Chromosome.jl

print_circuit(c2a) circuit((1,2), ((3,NOR,2,2), (4,NAND,3,1), (5,NAND,3,3)))
print_circuit(c2b) circuit((1,2), ((3,NAND,2,2), (4,NOR,3,3), (5,XOR,4,2)))
Correct result     circuit((1,2), ((3,NOR,2,2), (4,NAND,2,2), (5,NAND,3,1), (6,NOR,4,4), (7,NAND,3,3), (8,XOR,6,2)))
current result     circuit((1,2), ((3,NOR,2,2), (4,NAND,2,2), (5,NAND,4,1), (6,NOR,5,5), (7,NAND,4,4), (8,XOR,7,2)))
                   circuit((1,2), ((3,NOR,2,2), (4,NAND,2,2), (5,NAND,3,1), (6,NOR,4,4), (7,NAND,3,3), (8,XOR,6,2)))

print_circuit(c2c) circuit((1,2), ((3,NOR,1,1), (4,NAND,3,2), (5,NAND,4,3)))
print_circuit(c2d) circuit((1,2), ((3,NOR,1,1), (4,XOR,1,3), (5,AND,4,2)))
print_circuit(interleave_chromosomes( c2c, c2d ))
current result     circuit((1,2), ((3,NOR,1,1), (4,NOR,1,1), (5,NAND,3,2), (6,XOR,1,4), (7,NAND,5,3), (8,AND,6,2)))
correct result     circuit((1,2), ((3,NOR,1,1), (4,NOR,1,1), (5,NAND,3,2), (6,XOR,1,4), (7,NAND,5,3), (8,AND,6,2)))


P2a = Parameters(2,1,4,3); funcs=default_funcs(P2a)
c2e = random_chromosome(P2a,funcs); print_circuit(c2e); output_values(c2e)   
c2f = random_chromosome(P2a,funcs); print_circuit(c2f)   
print_circuit(interleave_chromosomes( c2e, c2f ))
# circuit((1,2), ((3,NAND,2,1), (4,NAND,1,1), (5,NAND,3,1), (6,NAND,2,1), (7,XOR,2,5), (8,OR,2,4), (9,NOR,5,3), (10,AND,6,8)))
# circuit((1,2), ((3,NAND,2,1), (4,NAND,1,1), (5,NAND,3,1), (6,NAND,2,1), (7,XOR,2,5), (8,OR,2,4), (9,NOR,5,3), (10,AND,6,8)))   Looks correct

Complete test:
p3 = [rand(0x0000:0x00ff)]   [0x00f5]
eoe = extract_odd_even(3,p3[1]) #  (0x000f, 0x000c)
cho = neutral_evolution(random_chromosome(P2,funcs),funcs, [eoe[1]], 100_000 );
che = neutral_evolution(random_chromosome(P2,funcs),funcs, [eoe[2]], 100_000 );
print_circuit(cho[1]);print_circuit(che[1]);
    circuit((1,2), ((3,OR,2,2), (4,NOR,1,2), (5,NAND,4,2)))
    circuit((1,2), ((3,AND,1,1), (4,OR,1,3), (5,AND,3,3)))
chb = chromosome_add_multiplexer( interleave_chromosomes( cho[1], che[1] )); print_circuit(chb)
    circuit((1,2,3), ((4,OR,2,2), (5,AND,1,1), (6,NOR,1,2), (7,OR,1,4), (8,NAND,5,2), (9,AND,4,4), (10,XOR,0,1), (11,AND,3,2), (12,XOR,1,3)))
output_values(chb) [0x000c]  # Not correct: does not match p3


