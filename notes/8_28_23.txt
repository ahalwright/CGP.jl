Normalizing genotypes.  How much information is contained in a minimal genotype for a phenotype?  

A genotype could be normalized by assuming an order on gate functions, and then reordering the inputs to any interior node
so that the inputs are in increasing numerical order.  This assumes that all gate functions are commutative.

Example:
P2 = Parameters( 2,1,3,3); funcs=default_funcs(P2)[1:4]
rch = random_chromosome( P2,funcs); print_circuit(rch) # circuit((1,2), ((3,NAND,2,1), (4,AND,3,1), (5,NOR,4,3)))
nch = random_chromosome( P2,funcs); print_circuit(rch) # circuit((1,2), ((3,NAND,1,2), (4,AND,1,3), (5,NOR,3,4)))

Wrote function count_circuits_ch_normalize

Example:
P2A = Parameters( 2,1,2,1); funcs=[default_funcs(P2)[3]]
count_circuits_ch_normalize(P2A,funcs) # 1.0
rchA = random_chromosome(P2A,funcs); print_circuit(rchA)
#  circuit((1,2), ((3,NAND,2,2), (4,NAND,3,3)))
count_circuits_ch_normalize(P2B,funcs)
4.0

rchb = random_chromosome(P2B,funcs); print_circuit(rchb)
circuit((1,2), ((3,NAND,2,2), (4,NAND,2,2)))

rchb = random_chromosome(P2B,funcs); print_circuit(rchb)
circuit((1,2), ((3,NAND,2,2), (4,NAND,3,2)))

rchb = random_chromosome(P2B,funcs); print_circuit(rchb)
circuit((1,2), ((3,NAND,2,1), (4,NAND,3,3)))

Possble chromosomes:
Int1:  [1,1], [1,2], [2,2]
Int2   [2,2], [2,3], [3,3]
