Tested the hypothesis that neutral mutational evolution is much better than a conventional GA
(also called the infinite alleles model) for digital circuit evolution.  The most important files 
are in src/Inf_alleles.jl.  

Data files are in CGP.jl/data/7_2.  The early files are summarized in 7_2/README.txt, and the
later files are in summary.csv (also in Windows evotech/complexity/data/7_2).

General conclusions:  
For 3 inputs, 3 outputs, mut_evolve is about the same as inf_alleles.
See inf_alleles7_2B.xlsx and mut_evolve7_2C.xlsx and mut_evolve7_2D.xlsx.  Tentative conclusion
also is that numints arount 20 is better than smaller values.

For 4 inputs and 2 outputs, mut_evolve is dramatically better than inf_alleles.  From my July 3
email to Cheyenne:
I have results comparing neutral mutational evolution with a conventional GA for evolving circuits.  Interestingly, there is not much difference for 3 inputs and 3 outputs, but for 4 inputs and 2 outputs there is a dramatic difference.  For neutral mutational evolution the average number of function evaluations is about 20,000 whereas for the conventional GA the number of function evaluations is roughly 700,000 (with a high variance).  Neutral mutational evolution can consistently evolve circuits with 4 inputs and 4 outputs  which is clearly completely infeasible with the GA.  I see this as more of a evolutionary computation result, although it might be a supplement to a complexity result.  The significance depends on a literature search of evolutionary computation results of this type.

See summary.{csv,xlsx} for restuls.


