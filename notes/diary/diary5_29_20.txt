Working on revising next_chromosome!() and mut_evolve_subgoal() to include selection for mutational robustness.

Changed next_chromosome!() to return the current chromosome c rather than trying to modify it.  Made the corresponding
changes to mut_evolve_subgoal()

I am thinking that next_chromosome!() should return the following tuple:
(c, matched_goals)
where
c  is the current chromosome which is the same as the previous chromosome if the best next chromosome has worse fitness 
    (num components of goals matched or num components of goals matched plus hamming distance for the best non-matched component)

matched_goals  which would be a list of tuples where each tuple is:
  (goal fitness robustness)
  All goals have maximum fitness in terms of number of goal components matched and best Hamming distance for unmatched
       components (if hamming==true).  The integer part of fitness is the number of goal components exactly matchethe,
       and the fractional part is the Hamming distance which is between 0.0 and 1.0 
  There may be multiple goals matched because mutiple goals may have some components matched and goallist may contain 
       multiiple identical goals.
  These tuples should be sorted on robutstness

For the time being, just return a single chromosome with maximum robustness.  Maybe later return the list of exactly 
  matching chromosomes in order of decreasing mutational robustness.
    

