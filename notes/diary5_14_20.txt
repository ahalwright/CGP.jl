5/14/20:

Working on lycosa.  src/Chromosome.jl copied to pardosa:  src/Chromosome.jl.

Completely rewrote the functions to do circuit evolution.  These functions were in src/Chrome_result.jl,
but then on 5/14, I moved Evolve.jl to stash and to lycosa_tmp, and moved Chrome_result.jl to Evolve.jl.

Executing a chromosome produces a vector "output" of results.  The length is c.params.numoutputs, and
the type of each component is MyInt.  

A goal is a vector of the same type and length.  The vectors output and goal match if there is a 
rearrangement of output so that all of the corresponding components of the two vectors are equal.  
There is a partial match if there is a rearrangement of output so that some of the corresponding 
components are equal.  The function components_matched( output::Vector{MyInt}, goal::Vector{MyInt} )
returns a list of triples, one for each component match.  See the comments in Evolve.jl for an example.

A goallist is a list of goals.  The function goals_matched( output::Vector{MyInt}, goallist::GoalList ) 
returns a triple (num_components_matched, goals_matched_list, components_matched_list).  
num_components_matched is the maximum number of components of output that match a goal in goallist,
and goal_matched_list is a list of the goals that acheive this maximum.  See the comments in Evolve.jl 
for an example.

function mut_evolve_subgoal( c::Chromosome, goallist::GoalList, funcs::Vector{Func}, max_steps::Integer )
runs a mutational evolution that is looking for a chromosome that matches all components of a goal
in goallist.  This is done by neutral evolution in that on each iteration of the loop, the current
chromosome c is repeatedly mutated.  If the output of the mutated chromosome matches fewer goal components
than the output of c, then the mutated chromosome is discarded.  If the output of the mutated chromosome 
matches the same number of components as the output of c, that the mutated chromosome replaces c and
iteration continues unless there is a complete match, in which case the evolution has succeeded.

Results:  So far, only results with NAND gate circuits.  With 3 inputs, 4 outputs, 12 interior nodes,
a goallist of length 10, and a step limit of 40000, it seems to usually succeed.

