Does epochal evolution to changing goals select for Tononi complexity?

# Two functions in Evolve.jl
# Does a sequence of epochal evolutions (calls of neutral_evolution()) with each evolution starting from the result of the previous evolution
function neutral_evolution_glist( c::Circuit, funcs::Vector{Func}, gl::GoalList, max_steps::Integer; print_steps::Bool=false,
      select_prob::Float64=1.0 )
  #println("neutral evolution started for goal: ",g)
  cur_ch = deepcopy(c)
  for g in gl
    ( cur_ch, step ) = neutral_evolution( cur_ch, funcs, g, max_steps )
    if step == max_steps
      println( "evolution failed for goal: ", g )
    else
      println( "evolution succeeded for goal: ", g )
    end
  end
end

# Returns a MyInt with nbits set to 1
# The bits set to 1 are in the sub-unsigned-integer corresponding to P.numinputs
# For example, if MyInt == UInt16 and P.numinputs == 3, then only bit chosen from bits 0 to 7 can be set to 1.
function rand_bit_word( P::Parameters, nbits::Int64=1 )
  total_nbits = 2^P.numinputs
  result = MyInt(0)
  for i = 1:nbits
    shift = rand(0:(total_nbits-1))
    println("i: ",i,"  shift: ",shift)
    rand_bit_word = MyInt(1) << shift
    result = xor( result, rand_bit_word )
  end
  result
end
