Results on counting phenotypes encountered on long neutral walks.

fdf = read_dataframe("../data/2_4_23/mutate_walk_histories_4inputs_16gates_5funcs_2000000nreps_100000save_interval_F.csv");

# Computing evolvability with 200 circuits per phenotype
# Uses the same phlist generated with random seed 2.
# df = include("../data/2_4_23/run_pheno_evolvabilitiesF.jl")  # 200 circuits per phenotype
# df = include("../data/2_4_23/run_pheno_evolvabilitiesFF.jl") # 800 circuits per phenotype
insertcols!(fdf,2,:ph_evol_evolvability=>df.evolvability)
spearman_cor(fdf,:ph_evol_evolvability,:walk_length) #  (0.8916256157635468, 9.72862952271416e-11)
scatter(fdf.walk_length,fdf.ph_evol_evolvability,smooth=true)  
scatter!(legend=:none,ylabel="phenotype evolution evolvability",xlabel="number unique phenotypes from long neutral walk")
savefig("../data/2_4_23/ph_count_long_walk_vs_evol_evolvability4x1_16gts_2Msteps_200circs.png")
savefig("../data/2_4_23/ph_count_long_walk_vs_evol_evolvability4x1_16gts_2Msteps_800circs.png")

# Computing evolvability with 800 circuits per phenotype
df = include("../data/2_4_23/run_pheno_evolvabilitiesFF.jl")  # Or include dataframe
scatter(fdf.max_walk,fdf.ph_evol_evolvability,smooth=true)  # Pretty good plot
scatter!(legend=:none,ylabel="approximate phenotype evolvability",xlabel="number unique phenotypes from long neutral walk")
savefig("../data/2_4_23/ph_count_long_walk_vs_approx_evolvability4x1_16gts_2Msteps.png")
insertcols!(fdf,2,:ph_evol_evolvability=>df.evolvability)
walk_histories = map(i->string_to_expression(fdf.walk_length_histories[i]),1:length(fdf.walk_length_histories))
plot(1:21,walk_histories)
plot!(legend=:none,xlabel="step/100000",ylabel="phenotype count")
savefig("../data/2_4_23/phenotypes_from_neutral_walk_28_phenos_4x1_16gts_2Msteps.png")

=================================
edf = read_dataframe("../data/2_4_23/mutate_walk_histories_4inputs_16gates_5funcs_1000000nreps_50000save_interval_E.csv")
plot(1:21,[string_to_expression(edf.walk_length_histories[4]),string_to_expression(edf.walk_length_histories[19])],labels=["phenotype [0x135f] ph_evo: 1674" "phenotype [0xa2cb] ph_evo: 5014"])
plot!(ylabel="phenotype count",xlabel="step/5000",title="phenotypes from neutral walk 4x1 16gts",legend=:bottomright)
savefig("../data/2_4_23/phenotypes_from_neutral_walk_two_phenos_4x1_16gts.png")

@time df = evolvable_pheno_df( p, funcs, [[0x135f],[0xa2cb]], 200, 5, 300_000 )
2×4 DataFrame
 Row │ pheno_list  evolvability  complexity  pheno_vects
     │ String      Int64         Float64     Array…
─────┼─────────────────────────────────────────────────────────────────────────
   1 │ 0x135f              1674     9.88416  [1290, 3, 0, 8, 5, 1, 0, 2, 17, …
   2 │ 0xa2cb              5014    13.2165   [416, 8, 12, 26, 16, 2, 0, 1, 22…

See pheno_net/collaboration/phenotype_evolvability_from_long_neutral_walks2_7_23.docx.

walk_histories = map(i->string_to_expression(edf.walk_length_histories[i]),1:length(edf.walk_length_histories))
plot(1:21,walk_histories)
plot!(legend=:none,xlabel="step/50000",ylabel="phenotype_count")
savefig("../data/2_4_23/phenotypes_from_neutral_walk_28_phenos_4x1_16gts.png")


=================================
Add evolvability to the results on 28 phenotypes given in edf downloaded as above.

# Uses the same phlist generated with random seed 1.
@time include("../data/2_4_23/run_pheno_evolvabilitiesE.jl")   # result dataframe df, 401 seconds
insertcols!(edf,2,:ph_evolvability=>df.evolvability)
wlh = map(string_to_expression,edf.walk_length_histories)
mx_evo=map(x->x[end],wlh)
insertcols!(edf,3,:max_walk=>mx_evo)
spearman_cor(edf,:ph_evolvability,:max_walk) #  (0.9074986316365626, 1.3617493240424581e-11)
scatter(edf.max_walk,edf.ph_evolvability,smooth=true)  # Pretty good plot
scatter!(legend=:none,ylabel="approximayte phenotype evolvability",xlabel="number unique phenotypes from long netral walk")
savefig("../data/2_4_23/ph_count_long_walk_vs_approx_evolvability4x1_16gts.png")

=================================
3x1 

ndf = read_dataframe("../data/2_4_23/mutate_walk_histories_3inputs_8gates_4funcs_100000nreps_5000save_interval_N.csv")
scatter(ndf.lg_redund,ndf.walk_length)
scatter!(xlabel="log redundancy",ylabel="phenotype count",title="neutral_walks_100,000steps_3x1_8gts4lb",legend=:none)
savefig("../data/2_4_23/neutral_walk_log_redund_vs_pheno_count_100Ksteps_3x1_8gts4lb.png")

ndf[ndf.walk_length.< 120,:]
11×4 DataFrame
 Row │ goal            lg_redund  walk_length  walk_length_histories
     │ String15        Float64    Int64        String
─────┼───────────────────────────────────────────────────────────────────────────
   1 │ UInt16[0x0063]    2.40824           50  [28, 50, 50, 50, 50, 50, 50, 50,…
   2 │ UInt16[0x0069]    0.90309           93  [32, 90, 92, 92, 92, 93, 93, 93,…
   3 │ UInt16[0x0079]    1.44716           30  [29, 30, 30, 30, 30, 30, 30, 30,…
   4 │ UInt16[0x0086]    1.39794           58  [36, 58, 58, 58, 58, 58, 58, 58,…
   5 │ UInt16[0x0096]    0.90309           97  [36, 97, 97, 97, 97, 97, 97, 97,…
   6 │ UInt16[0x009e]    1.60206           48  [25, 45, 47, 47, 48, 48, 48, 48,…
   7 │ UInt16[0x00bc]    3.4685           115  [25, 95, 102, 104, 105, 105, 105…
   8 │ UInt16[0x00c2]    3.479             85  [27, 81, 81, 82, 83, 83, 83, 85,…
   9 │ UInt16[0x00d6]    1.85733          104  [26, 100, 102, 103, 103, 103, 10…
  10 │ UInt16[0x00e7]    2.09342          117  [22, 77, 88, 101, 103, 104, 106,…
  11 │ UInt16[0x00e9]    2.14613          111  [34, 105, 108, 109, 110, 110, 11…

There are quite a lot of phenotypes with short walk lengths which suggests diconnected genotype networks.

A rerun on surt2 on 2/7/23:

pdf[pdf.walk_length.< 120,:]
19×4 DataFrame
 Row │ goal            lg_redund  walk_length  walk_length_histories
     │ Array…          Float64    Int64        Vector{Int64}
─────┼───────────────────────────────────────────────────────────────────────────
   1 │ UInt16[0x0016]    2.21484          107  [29, 76, 76, 76, 76, 76, 76, 76,…
   2 │ UInt16[0x0029]    2.00432           71  [29, 57, 58, 58, 63, 64, 65, 65,…
   3 │ UInt16[0x002d]    2.19033           70  [30, 70, 70, 70, 70, 70, 70, 70,…
   4 │ UInt16[0x0038]    2.86982           43  [23, 43, 43, 43, 43, 43, 43, 43,…
   5 │ UInt16[0x0049]    1.49136          118  [34, 111, 115, 117, 117, 117, 11…
   6 │ UInt16[0x0061]    1.47712          102  [33, 99, 101, 101, 102, 102, 102…
   7 │ UInt16[0x0063]    2.40824           65  [32, 65, 65, 65, 65, 65, 65, 65,…
   8 │ UInt16[0x0068]    2.22531          118  [30, 64, 67, 90, 90, 90, 90, 91,…
   9 │ UInt16[0x0069]    0.90309           36  [33, 36, 36, 36, 36, 36, 36, 36,…
  10 │ UInt16[0x006b]    2.0086            55  [32, 55, 55, 55, 55, 55, 55, 55,…
  11 │ UInt16[0x006d]    1.4624            42  [31, 42, 42, 42, 42, 42, 42, 42,…
  12 │ UInt16[0x0092]    1.63347           43  [30, 43, 43, 43, 43, 43, 43, 43,…
  13 │ UInt16[0x0096]    0.90309          101  [34, 99, 100, 100, 100, 100, 101…
  14 │ UInt16[0x0097]    2.21484           56  [24, 54, 56, 56, 56, 56, 56, 56,…
  15 │ UInt16[0x009e]    1.60206           54  [30, 54, 54, 54, 54, 54, 54, 54,…
  16 │ UInt16[0x00b4]    2.16137           77  [34, 62, 74, 77, 77, 77, 77, 77,…
  17 │ UInt16[0x00d2]    2.19312           89  [32, 88, 88, 89, 89, 89, 89, 89,…
  18 │ UInt16[0x00db]    2.05308          107  [21, 71, 74, 82, 93, 93, 99, 103…
  19 │ UInt16[0x00e9]    2.14613          110  [25, 63, 63, 66, 105, 107, 107, …

9×4 DataFrame
 Row │ goal            lg_redund  walk_length  walk_length_histories
     │ Array…          Float64    Int64        Vector{Int64}
─────┼───────────────────────────────────────────────────────────────────────────
   1 │ UInt16[0x0018]    2.07188          113  [21, 88, 107, 108, 108, 108, 108…
   2 │ UInt16[0x002d]    2.19033           29  [29, 29, 29, 29, 29, 29, 29, 29,…
   3 │ UInt16[0x004d]    3.38578           80  [20, 80, 80, 80, 80, 80, 80, 80,…
   4 │ UInt16[0x0069]    0.90309           95  [31, 94, 94, 94, 95, 95, 95, 95,…
   5 │ UInt16[0x006f]    2.82413           80  [29, 80, 80, 80, 80, 80, 80, 80,…
   6 │ UInt16[0x0086]    1.39794          112  [33, 100, 102, 110, 111, 112, 11…
   7 │ UInt16[0x0096]    0.90309           39  [32, 39, 39, 39, 39, 39, 39, 39,…
   8 │ UInt16[0x0098]    3.45025           75  [21, 75, 75, 75, 75, 75, 75, 75,…
   9 │ UInt16[0x00e9]    2.14613           46  [30, 46, 46, 46, 46, 46, 46, 46,…

Strong evidence of disconnected genotype networks.
Example discrepency:  
phenot  first run  second run  third run
0x002d    143         70          29
0x0079     30        171         129
0x006d    149         42         188

