Finished debugging neutral_walk_connectivity.jl.

# Objective:  Find the size of the components of the neutral network of a goal.
# Methodology:  Do multiple neutral random walks starting at a random circuit that maps to the goal.
# neutral_walk() accumulate all neighbors of all neutral circuits encountered on the random neutral walk.
# Then run_neutral_walk() combines the circuit lists returned by multiple random walks
#      if they have a circuit in common.
# Thus, run_neutral_walk() returns circuit lists that have not been shown to be in the same connected
#      component.

Comments on results shown below:
For 3x1 goals:
Neutral networks of common goals clearly have a single component.
For the 3 rarest goals, there appears to be one very large component and a small number of very small components.

For the 4x1 goal, as w increases, the program slows down and is using close to the maximum amount of memory on lyocsa.

Conclusion:  I should use dictionaries to implement circuit code lists.  I can parallelize the neutral walks, but I
don't see how to parallelize the combinination of circuit code lists.  Hopefully, using dictionaries will help.

Counts from file: data/10_26/count_out_3x1_raman_6ints_4lb_10_26.csv
Parameters:  3 inputs 1 output 6 ints 4 levsback
goal:  [0x0049]    count:  53
julia> run_neutral_walk( g, p, 100, 1200, 50000, 30)
w: 100  walk_list after add: [1, 11, 21, 25, 29, 44, 89, 96]
w: 100  length(circuit_code_list) after add: 8  lengths circuit_code_list: [724574, 209, 840, 108, 108, 1173, 205, 39]

goal:  [0x007a]  count:  191
w: 100  walk_list after add: [1]
w: 100  length(circuit_code_list) after add: 1  lengths circuit_code_list: [1402542]

goal:  [0x00ea]  count:  3330
w: 100  walk_list after add: [1]
w: 100  length(circuit_code_list) after add: 1  lengths circuit_code_list: [2256464]

goal:  [0x0029]  count:  61
w: 100  walk_list after add: [1, 3]
w: 100  length(circuit_code_list) after add: 2  lengths circuit_code_list: [877089, 108]
1416 seconds

goal:  [0x00d6]  count:  62
w: 100  walk_list after add: [1, 31, 96]
w: 100  length(circuit_code_list) after add: 3  lengths circuit_code_list: [843917, 329, 75]

Parameters:  4 inputs, 1 output, 8 ints, 5 levsback
goal:  [0x0003]  count:  15023171    from counts/count_out_4x1_8ints_10_10dec.csv
@time run_neutral_walk( g, p, 30, 1200, 150000, 60)
w: 30  walk_list after add: [1, 2, 4, 5, 6, 7, 8, 10, 12, 22, 23, 25, 26]
w: 30  length(circuit_code_list) after add: 13  lengths circuit_code_list: [51136, 608645, 53734, 100166, 206337, 50558, 52111, 155075, 53349, 52545, 50249, 51848, 51706]
1714 seconds

julia> @time run_neutral_walk( g, p, 150, 1200, 150000, 60)   # same goal
w: 150  walk_list after add: [1, 3, 13, 26, 33, 36, 39, 41, 58, 59, 60, 74, 83, 95, 101, 106, 115, 123, 125, 144]
w: 150  length(circuit_code_list) after add: 20  lengths circuit_code_list: [6498299, 101310, 49275, 50427, 51811, 104625, 52091, 47588, 51573, 50732, 99950, 54379, 47065, 52257, 104147, 52318, 51599, 52929, 52562, 50387]


goal:  [0x01f0]  count: 8450  


goal:  [0x01e3]   count:  14    (surt2)
